name: promote-to-ga
on:
  push:
    tags:
      - v*
jobs:
  promote-to-ga:
    runs-on: ubuntu-latest
    name: promote-to-ga
    env:
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_ACCESS_KEY_ID: ${{ secrets.GH_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.GH_AWS_SECRET_ACCESS_KEY }}
      AWS_EC2_METADATA_DISABLED: true
      DEV_REGISTRY: ${{ secrets.DEV_REGISTRY }}
      RELEASE_REGISTRY: ${{ secrets.RELEASE_REGISTRY }}
      GCLOUD_SA_KEY: ${{ secrets.GCLOUD_SA_KEY }}
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.event.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+(-ea)?$ ]]; then
              echo ::set-output name=match::true
          fi
      - uses: actions/checkout@v2
      - name: "Docker Login"
        uses: docker/login-action@v1
        if: steps.check-tag.outputs.match == 'true'
        with:
          username: ${{ secrets.GH_DOCKER_RELEASE_USERNAME }}
          password: ${{ secrets.GH_DOCKER_RELEASE_TOKEN }}
      - name: "Install Go"
        uses: ./.github/actions/setup-go
      - name: "make release/promote-oss/to-ga"
        if: steps.check-tag.outputs.match == 'true'
        run: |
          make release/promote-oss/to-ga VERSION=${GITHUB_REF#refs/*/}
      # TODO: need to get dev mirror to test
      #- name: "make release/ga-mirror"
        #run: |
          #make release/ga-mirror
      - name: Slack notification
        if: ${{ always() && steps.check-tag.outputs.match == 'true' }}
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          success_text: 'Emissary GA for ${env.GITHUB_REF} successfully built'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed'
          cancelled_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled'
          fields: |
            [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             { "title": "Branch", "value": "${env.GITHUB_REF}", "short": true },
             { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}
            ]
  changelog-date-edits:
    runs-on: ubuntu-latest
    needs: [promote-to-ga]
    name: "Update date in changelog"
    env:
      GIT_TOKEN: ${{ secrets.GH_GITHUB_API_KEY }}
      AUTO_USER: ${{ secrets.GH_AUTO_USER }}
      AUTO_EMAIL: ${{ secrets.GH_AUTO_EMAIL }}
      AMBASSADOR_RELENG_NO_GUI: "1"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "setup git config"
        run: |
          set -x
          git config --global user.email "$AUTO_EMAIL"
          git config --global user.name "$AUTO_USER"
          git config --global "url.https://$GIT_TOKEN@github.com.insteadOf" https://github.com
          echo "${GIT_TOKEN}" | gh auth login --with-token
      - name: "Make changelog changes"
        run: |
          make release/ga/changelog-update VERSION=${GITHUB_REF#refs/*/}
      - name: Extract branch name
        shell: bash
        run: echo "PR_URL=$(gh pr view --json url --jq .url)" >> $GITHUB_ENV
      - name: Create github release
        run: |
          make release/ga/create-gh-release VERSION=${GITHUB_REF#refs/*/}
      - name: Slack notification
        if: always()
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          success_text: 'Pull request ready for changelog update: ${env.PR_URL}'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed'
          cancelled_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled'
          fields: |
            [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             { "title": "Branch", "value": "${env.GITHUB_REF}", "short": true },
             { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}
            ]
  chart-manifest-updates:
    runs-on: ubuntu-latest
    needs: [promote-to-ga]
    name: "Update manifests and chart with new version"
    env:
      GIT_TOKEN: ${{ secrets.GH_GITHUB_API_KEY }}
      AUTO_USER: ${{ secrets.GH_AUTO_USER }}
      AUTO_EMAIL: ${{ secrets.GH_AUTO_EMAIL }}
      AMBASSADOR_RELENG_NO_GUI: "1"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "setup git config"
        run: |
          set -x
          git config --global user.email "$AUTO_EMAIL"
          git config --global user.name "$AUTO_USER"
          git config --global "url.https://$GIT_TOKEN@github.com.insteadOf" https://github.com
          echo "${GIT_TOKEN}" | gh auth login --with-token
      - name: "Make changelog changes"
        run: |
          make release/ga/manifest-update VERSION=${GITHUB_REF#refs/*/}
      - name: Extract PR URL
        shell: bash
        run: echo "PR_URL=$(gh pr view --json url --jq .url)" >> $GITHUB_ENV
      - name: Slack notification
        if: always()
        uses: edge/simple-slack-notify@master
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          success_text: 'Pull request ready for chart updates: ${env.PR_URL}'
          failure_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build failed'
          cancelled_text: '${env.GITHUB_WORKFLOW} (${env.GITHUB_RUN_NUMBER}) build was cancelled'
          fields: |
            [{ "title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             { "title": "Branch", "value": "${env.GITHUB_REF}", "short": true },
             { "title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}
            ]
